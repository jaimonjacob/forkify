{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iG,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,WCE5F,MAAMC,EAAkBC,SAASC,cAAc,YAiB5BC,iBACjB,IACE,MAAMC,QAAYC,MAAM,6EAClBC,QAAaF,EAAIG,OACvB,IAAKH,EAAII,GACP,MAAM,IAAIpB,MAAM,uBAAuBkB,EAAKG,WAGhD,IAAIC,OAACA,GAAUJ,EAAKA,KACpBK,QAAQC,IAAIF,GACZA,EAAS,CACPG,UAAWH,EAAOI,WAClB5B,GAAIwB,EAAOxB,GACX6B,YAAaL,EAAOK,YACpBC,SAAUN,EAAOO,UACjBC,UAAWR,EAAOQ,UAClBC,YAAaT,EAAOU,aACpBC,MAAOX,EAAOW,MACdC,SAAUZ,EAAOY,UAEnBX,QAAQC,IAAIF,GACZ,MAAMa,EAAM,yDAEQb,EAAOM,0GAETN,EAAOW,0MAOAG,EAAA/B,qHAE8CiB,EAAOS,iNAKrDK,EAAA/B,oHAE6CiB,EAAOY,wPAMhDE,EAAA/B,uMAKA+B,EAAA/B,qNAQJ+B,EAAA/B,2JAKA+B,EAAA/B,sPAQjBiB,EAAOK,YAAYU,KAAIC,GAClB,6FAEQF,EAAA/B,gFAEiBiC,EAAGC,mGAEJD,EAAGE,0BAC9BF,EAAGG,6CAGJC,KAAK,qSAQ8BpB,EAAOQ,4KAKlCR,EAAOG,8JAKCW,EAAA/B,sFAKzBO,EAAgB+B,mBAAmB,aAAcR,EAIjD,CAFC,MAAMS,GACLrB,QAAQC,IAAIoB,EACd,CACF,CAEAC","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-552fcf0be4b79281.js","node_modules/@parcel/runtime-js/lib/runtime-644f02e9c3f5eee3.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"f9fpV\\\":\\\"index.e8f0235d.js\\\",\\\"hfd23\\\":\\\"icons.c14567a0.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hfd23\")).toString();","import icons from '../img/icons.svg'\n\nconst recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n//2fb8c90a-c94a-4485-ace1-394ebb44d609\n\n//5ed6604591c37cdc054bc8fd\n//5ed6604591c37cdc054bca5d\nconst showRecipe = async function(){\n  try{\n    const res = await fetch(\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bca5d\");\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`There is an error...${data.message}`)\n    }\n  \n  let {recipe} = data.data;\n  console.log(recipe) \n  recipe = {\n    sourceUrl: recipe.source_url,\n    id: recipe.id, \n    ingredients: recipe.ingredients,\n    imageUrl: recipe.image_url,\n    publisher: recipe.publisher,\n    cookingTime: recipe.cooking_time, \n    title: recipe.title,\n    servings: recipe.servings\n  } \n  console.log(recipe) \n  const html =`\n  <figure class=\"recipe__fig\">\n          <img src=\"${recipe.imageUrl}\" alt=\"Tomato\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"${icons}#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"${icons}#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"${icons}#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"${icons}#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"${icons}#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"${icons}#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients.map(el => {\n        return `<li class=\"recipe__ingredient\">\n        <svg class=\"recipe__icon\">\n          <use href=\"${icons}#icon-check\"></use>\n        </svg>\n        <div class=\"recipe__quantity\">${el.quantity}</div>\n        <div class=\"recipe__description\">\n          <span class=\"recipe__unit\">${el.unit}</span>\n          ${el.description}\n        </div>\n      </li>`  \n        }).join('')} \n        </ul>\n          </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=${recipe.sourceUrl}\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"${icons}#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n  `  \n  recipeContainer.insertAdjacentHTML('afterbegin', html)\n\n  }catch(err){\n    console.log(err)\n  }\n}\n\nshowRecipe();\n\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$cb59c201e168fdfe$exports","URL","resolve","import","meta","url","toString","$f50bd1f2915ed0f2$var$recipeContainer","document","querySelector","async","res","fetch","data","json","ok","message","recipe","console","log","sourceUrl","source_url","ingredients","imageUrl","image_url","publisher","cookingTime","cooking_time","title","servings","html","$parcel$interopDefault","map","el","quantity","unit","description","join","insertAdjacentHTML","err","$f50bd1f2915ed0f2$var$showRecipe"],"version":3,"file":"index.e8f0235d.js.map"}